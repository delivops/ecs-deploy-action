{
  "containerDefinitions": [
    {
      "name": "init-container-for-secret-files",
      "image": "public.ecr.aws/aws-cli/aws-cli:latest",
      "essential": false,
      "entryPoint": [
        "/bin/sh"
      ],
      "command": [
        "-c",
        "for secret in ${SECRET_FILES//,/ }; do   echo \"Fetching $secret...\";   echo \"Debug: AWS_REGION=$AWS_REGION, SECRET_PATH=/etc/secrets\";   SECRET_VALUE=$(aws secretsmanager get-secret-value --secret-id $secret --region $AWS_REGION --query SecretString --output text 2>/dev/null);   STRING_RESULT=$?;   if [ $STRING_RESULT -eq 0 ] && [ -n \"$SECRET_VALUE\" ] && [ \"$SECRET_VALUE\" != \"null\" ] && [ \"$SECRET_VALUE\" != \"none\" ] && [ \"$SECRET_VALUE\" != \"None\" ]; then     echo \"Found text secret, saving to /etc/secrets/$secret\";     echo \"$SECRET_VALUE\" > /etc/secrets/$secret;   else     echo \"Text retrieval failed or returned null, trying binary retrieval...\";     aws secretsmanager get-secret-value --secret-id $secret --region $AWS_REGION --query SecretBinary --output text | base64 -d > /etc/secrets/$secret 2>/dev/null;     BINARY_RESULT=$?;     if [ $BINARY_RESULT -eq 0 ] && [ -s /etc/secrets/$secret ]; then       echo \"Found binary secret, saved to /etc/secrets/$secret\";     else       echo \"\u274c Failed to retrieve $secret as either text or binary\" >&2;       echo \"Text result: $STRING_RESULT, Binary result: $BINARY_RESULT\" >&2;       exit 1;     fi;   fi;   echo \"\u2705 Successfully saved $secret to /etc/secrets/$secret (size: $(stat -c%s /etc/secrets/$secret 2>/dev/null || wc -c < /etc/secrets/$secret))\"; done"
      ],
      "environment": [
        {
          "name": "SECRET_FILES",
          "value": "ssl-certificate,private-key,config-file,service-account-key"
        },
        {
          "name": "AWS_REGION",
          "value": "us-east-1"
        }
      ],
      "mountPoints": [
        {
          "sourceVolume": "shared-volume",
          "containerPath": "/etc/secrets"
        }
      ],
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-group": "/ecs/test-cluster/test-service",
          "awslogs-region": "us-east-1",
          "awslogs-stream-prefix": "ssm-file-downloader"
        }
      }
    },
    {
      "name": "app",
      "image": "123456789012.dkr.ecr.us-east-1.amazonaws.com/test-app:latest",
      "essential": true,
      "environment": [
        {
          "name": "NODE_ENV",
          "value": "production"
        },
        {
          "name": "API_VERSION",
          "value": "v1"
        },
        {
          "name": "LOG_LEVEL",
          "value": "info"
        },
        {
          "name": "DATABASE_URL",
          "value": "postgresql://localhost:5432/myapp"
        },
        {
          "name": "REDIS_URL",
          "value": "redis://localhost:6379"
        },
        {
          "name": "MAX_CONNECTIONS",
          "value": "100"
        },
        {
          "name": "TIMEOUT_SECONDS",
          "value": "30"
        },
        {
          "name": "ENABLE_METRICS",
          "value": "True"
        },
        {
          "name": "DEBUG_MODE",
          "value": "False"
        },
        {
          "name": "API_RATE_LIMIT",
          "value": "1000.5"
        }
      ],
      "command": [
        "npm",
        "start"
      ],
      "entryPoint": [
        "/usr/local/bin/docker-entrypoint.sh"
      ],
      "secrets": [
        {
          "name": "DATABASE_PASSWORD",
          "valueFrom": "arn:aws:secretsmanager:us-east-1:123456789012:secret:prod-db-password:DATABASE_PASSWORD::"
        },
        {
          "name": "API_KEY",
          "valueFrom": "arn:aws:secretsmanager:us-east-1:123456789012:secret:external-api-key:API_KEY::"
        },
        {
          "name": "JWT_SECRET",
          "valueFrom": "arn:aws:secretsmanager:us-east-1:123456789012:secret:jwt-signing-key:JWT_SECRET::"
        }
      ],
      "stopTimeout": 30,
      "logConfiguration": {
        "logDriver": "awsfirelens",
        "options": {}
      },
      "healthCheck": {
        "command": [
          "CMD-SHELL",
          "curl -f http://localhost:8080/health || exit 1"
        ],
        "interval": 30,
        "timeout": 5,
        "retries": 3,
        "startPeriod": 60
      },
      "portMappings": [
        {
          "name": "default",
          "containerPort": 8080,
          "hostPort": 8080,
          "protocol": "tcp",
          "appProtocol": "http"
        },
        {
          "name": "metrics",
          "containerPort": 9090,
          "hostPort": 9090,
          "protocol": "tcp",
          "appProtocol": "http"
        },
        {
          "name": "health",
          "containerPort": 8081,
          "hostPort": 8081,
          "protocol": "tcp",
          "appProtocol": "http"
        },
        {
          "name": "admin",
          "containerPort": 8082,
          "hostPort": 8082,
          "protocol": "tcp",
          "appProtocol": "http"
        }
      ],
      "mountPoints": [
        {
          "sourceVolume": "shared-volume",
          "containerPath": "/etc/secrets"
        }
      ],
      "dependsOn": [
        {
          "containerName": "init-container-for-secret-files",
          "condition": "SUCCESS"
        },
        {
          "containerName": "fluent-bit",
          "condition": "START"
        }
      ]
    },
    {
      "name": "fluent-bit",
      "image": "123456789012.dkr.ecr.us-east-1.amazonaws.com/fluent-bit:2.1.0",
      "essential": true,
      "environment": [
        {
          "name": "SERVICE_NAME",
          "value": "test-service"
        },
        {
          "name": "ENV",
          "value": "test-cluster"
        }
      ],
      "healthCheck": {
        "command": [
          "CMD-SHELL",
          "curl -f http://127.0.0.1:2020/api/v1/health || exit 1"
        ],
        "interval": 10,
        "timeout": 5,
        "retries": 3,
        "startPeriod": 5
      },
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-group": "/ecs/test-cluster/test-service",
          "awslogs-region": "us-east-1",
          "awslogs-stream-prefix": "fluentbit"
        }
      },
      "firelensConfiguration": {
        "type": "fluentbit",
        "options": {
          "config-file-type": "file",
          "config-file-value": "extra/custom-fluent-bit.conf",
          "enable-ecs-log-metadata": "true"
        }
      }
    },
    {
      "name": "otel-collector",
      "image": "123456789012.dkr.ecr.us-east-1.amazonaws.com/public.ecr.aws/aws-observability/aws-otel-collector:v0.30.0",
      "portMappings": [
        {
          "name": "otel-collector-4317-tcp",
          "containerPort": 4317,
          "hostPort": 4317,
          "protocol": "tcp",
          "appProtocol": "grpc"
        },
        {
          "name": "otel-collector-4318-tcp",
          "containerPort": 4318,
          "hostPort": 4318,
          "protocol": "tcp"
        }
      ],
      "essential": true,
      "command": [
        "--config",
        "/conf/otel-config.yaml"
      ],
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-group": "/ecs/test-cluster/test-service",
          "awslogs-region": "us-east-1",
          "awslogs-stream-prefix": "otel-collector"
        }
      },
      "environment": [
        {
          "name": "METRICS_PATH",
          "value": "/custom/metrics"
        },
        {
          "name": "METRICS_PORT",
          "value": "8888"
        },
        {
          "name": "SERVICE_NAME",
          "value": "test-service"
        }
      ]
    }
  ],
  "cpu": "1024",
  "memory": "2048",
  "runtimePlatform": {
    "cpuArchitecture": "X86_64",
    "operatingSystemFamily": "LINUX"
  },
  "family": "test-cluster_test-service",
  "taskRoleArn": "arn:aws:iam::123456789012:role/ecsTaskExecutionRole",
  "executionRoleArn": "arn:aws:iam::123456789012:role/ecsTaskExecutionRole",
  "networkMode": "awsvpc",
  "requiresCompatibilities": [
    "FARGATE"
  ],
  "volumes": [
    {
      "name": "shared-volume",
      "host": {}
    }
  ]
}